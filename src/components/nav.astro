---
import { Image } from "astro:assets";
import Logo from "@public/images/sst-logo.svg";

const { manual } = Astro.props;
---

<style>
    li {
        @apply relative bg-accentOrange;
    }
    .nav-link {
        @apply flex w-full rounded bg-accentOrange p-2 text-lg font-bold leading-none text-black no-underline hover:cursor-pointer hover:bg-black hover:text-accentOrange;
    }
    menu {
        @apply fixed left-0 hidden w-full flex-col gap-2 overflow-y-auto rounded bg-accentOrange p-2 shadow-lg shadow-black md:left-auto md:w-fit;
    }
</style>

<nav
    id="nav"
    class="sticky top-0 z-50 flex list-none whitespace-nowrap bg-accentOrange p-1 md:gap-2">
    <a href="https://surge-synth-team.org/" title="surge-synth-team.org" class="flex">
        <Image
            class="mr-auto"
            alt="Surge Synth Team logo"
            title="surge-synth-team.org"
            src={Logo}
            width={36}
            height={36}
        /></a
    >
    <div class="m-auto flex">
        {
            manual ? (
                <li>
                    <a id="nav_toc" class="nav-link">
                        â‰¡
                    </a>
                </li>
            ) : (
                ""
            )
        }

        <li>
            <a id="nav_home" href="/" class="nav-link">Home</a>
        </li>

        <li class="li_documentation">
            <a id="nav_documentation" class="nav-link">Documentation</a>
            <menu id="documentation_options">
                <li><a href="/changelog" class="nav-link">Changelog</a></li>
                <li><a href="/manual-xt" class="nav-link">Manual</a></li>
                <li><a href="/rack_xt_manual" class="nav-link">VCV Modules Manual</a></li>
                <li><a href="/tuning-guide" class="nav-link">Tuning Guide</a></li>
                <li><a href="/accessibility" class="nav-link">Accessibility</a></li>
                <li>
                    <a
                        href="https://github.com/surge-synthesizer/surge-synthesizer.github.io/wiki/Virus-Warnings-on-Windows"
                        class="nav-link">Virus Warnings</a
                    >
                </li>
            </menu>
        </li>

        <li>
            <a id="nav_extras" class="nav-link">Extras</a>
            <menu id="extras_options">
                <li><a href="/skin-library" class="nav-link">Skin Library</a></li>
                <li>
                    <a
                        href="https://github.com/surge-synthesizer/surge-synthesizer.github.io/wiki"
                        class="nav-link">Wiki</a
                    >
                </li>
                <li><a href="/clap" class="nav-link">About CLAP</a></li>
            </menu>
        </li>

        <li>
            <a id="nav_about" class="nav-link">About</a>
            <menu id="about_options">
                <li><a href="/reviews-media" class="nav-link">Reviews & Media</a></li>
                <li><a href="/about" class="nav-link">History</a></li>
                <li><a href="/feedback" class="nav-link">Contact</a></li>
                <li>
                    <a href="https://github.com/surge-synthesizer/surge" class="nav-link"
                        >Source Code</a
                    >
                </li>
            </menu>
        </li>
    </div>
</nav>

<script is:inline>
    const hide = (element) => {
        if (element !== null) {
            element.style.display = "none";
        }
    };

    const show = (element) => {
        if (element !== null) {
            element.style.display = "flex";
        }
    };

    const check = (title, list) => {
        if (title !== null && list !== null) {
            if (window.getComputedStyle(list).display === "none") {
                show(list);
                title.setAttribute("aria-expanded", "true");
            } else {
                hide(list);
                title.setAttribute("aria-expanded", "false");
            }
        }
    };

    const addTouchListeners = () => {
        document.getElementById("nav_toc")?.addEventListener("mousedown", () => {
            check(document.getElementById("nav_toc"), document.getElementById("toc_options"));
            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });

        document.getElementById("nav_home")?.addEventListener("mousedown", () => {
            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });

        document.getElementById("nav_documentation")?.addEventListener("mousedown", () => {
            show(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });

        document.getElementById("nav_extras")?.addEventListener("mousedown", () => {
            hide(document.getElementById("documentation_options"));
            show(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });

        document.getElementById("nav_about")?.addEventListener("mousedown", () => {
            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            show(document.getElementById("about_options"));
        });

        document.getElementById("nav")?.addEventListener("mouseleave", (e) => {
            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });
    };

    const addDesktopListeners = () => {
        document.getElementById("nav_toc")?.addEventListener("mousedown", () => {
            check(document.getElementById("nav_toc"), document.getElementById("toc_options"));
            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });

        document.getElementById("nav_home")?.addEventListener("mouseenter", () => {
            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });

        document.getElementById("nav_documentation")?.addEventListener("mouseenter", () => {
            show(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });

        document.getElementById("nav_extras")?.addEventListener("mouseenter", () => {
            hide(document.getElementById("documentation_options"));
            show(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });

        document.getElementById("nav_about")?.addEventListener("mouseenter", () => {
            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            show(document.getElementById("about_options"));
        });

        document.getElementById("nav")?.addEventListener("mouseleave", (e) => {
            hide(document.getElementById("documentation_options"));
            hide(document.getElementById("extras_options"));
            hide(document.getElementById("about_options"));
        });
    };

    let nav;

    const setOffset = (element) => {
        if (element !== null) {
            document.getElementById(element).style.top = `${nav.offsetHeight}px`;
        }
    };

    const setHeight = (element) => {
        if (element !== null) {
            document.getElementById(element).style.maxHeight =
                `calc(100vh - ${nav.offsetHeight}px)`;
        }
    };

    const setNav = () => {
        nav = document.getElementById("nav");
        document.documentElement.style.scrollPaddingTop = `${nav.offsetHeight}px`;

        if (document.getElementById("toc_options")) {
            setHeight("toc_options");
            setOffset("toc_options");
        }

        setHeight("documentation_options");
        setHeight("extras_options");
        setHeight("about_options");

        setOffset("documentation_options");
        setOffset("extras_options");
        setOffset("about_options");
    };

    document.addEventListener("DOMContentLoaded", () => {
        setNav();

        window.matchMedia("(min-width: 768px)").addEventListener("change", (e) => {
            setNav();
        });

        if (navigator.maxTouchPoints > 0) addTouchListeners();
        else addDesktopListeners();
    });
</script>
