---
const {} = Astro.props;
---

<style>
    menu {
        @apply sticky hidden w-full flex-col gap-2 overflow-y-auto whitespace-pre-wrap rounded bg-neutral-50 p-4 text-neutral-900 shadow-lg shadow-black dark:bg-neutral-900 dark:text-neutral-200 md:left-auto md:flex md:w-fit md:max-w-[36ch];
    }
</style>

<menu id="toc_options"></menu>

<script>
    const generateToc = () => {
        let toc = document.getElementById("toc_options") as HTMLMenuElement;

        Array.from(document.querySelectorAll("h1")).map((heading) => {
            let li = document.createElement("li");
            let a = document.createElement("a");
            let level = Number(heading.tagName.substring(1));

            a.setAttribute("href", "#" + heading.id);
            a.setAttribute("class", "no-underline");

            if (heading.textContent) li.innerText = heading.textContent.trim();

            if (level === 1) {
                li.setAttribute("class", "text-lg font-bold");
            }

            if (level === 2) {
                li.setAttribute(
                    "style",
                    "padding-left: 1rem; list-style-type: '• ';",
                );
            }

            if (level === 3)
                li.setAttribute(
                    "style",
                    "padding-left: 2rem; list-style-type: '◦ ';",
                );
            if (level === 4)
                li.setAttribute(
                    "style",
                    "padding-left: 3rem; list-style-type: '⁃ ';",
                );
            if (level === 5)
                li.setAttribute(
                    "style",
                    "padding-left: 4rem;  list-style-type: '⁃ '",
                );
            if (level === 6)
                li.setAttribute(
                    "style",
                    "padding-left: 5rem;  list-style-type: '⁃ '",
                );

            a.appendChild(li);

            toc.appendChild(a);

            a.addEventListener("mouseup", (e) => {
                const options = document.getElementById(
                    "toc_options",
                ) as HTMLElement;

                if (!window.matchMedia("(min-width: 768px)").matches) {
                    options.style.display = "none";
                    e.stopPropagation();
                }
            });
        });
    };

    document.addEventListener("DOMContentLoaded", () => {
        generateToc();
    });
</script>
